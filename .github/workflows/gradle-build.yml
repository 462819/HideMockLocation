# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Gradle

on:
  pull_request:
    branches: [ main ]
    types: [opened, closed, reopened, synchronize]

permissions: write-all

env:
  APP_NAME: HideMockLocation

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Input Check
      run: |
        echo "github.event_name : ${{ github.event_name }}"
        echo "github.event.action : ${{ github.event.action }}"
        echo "github.ref : ${{ github.ref }}"
        echo "github.event.pull_request.merged : ${{ github.event.pull_request.merged }}"
        echo "github.event.number : ${{ github.event.number }}"
        
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
#    - name: Set up JDK
#      uses: actions/setup-java@v2
#      with:
#        java-version: '11'
#        distribution: 'temurin'
        
    - name: Get Gradle VersionName
      working-directory : ${{ github.workspace }}/app
      run : |
        echo "Get Gradle VersionName"
        echo "VERSIONNAME=$(grep 'versionName' build.gradle | awk '{print $2}')" | tr -d '"' >> $GITHUB_ENV
  
    - name: Output Gradle VersionName
      run : |
        echo "Output Gradle VersionName"
        echo "${{ env.VERSIONNAME }}"
      
    - name: Create Gradle VersionName TXT File
      working-directory : ${{ github.workspace }}/app
      run : |
        echo "Create Gradle VersionName TXT File"
        echo "${{ env.VERSIONNAME }}" > VersionName.txt
      
    - name: Check if ${{ env.VERSIONNAME }} tag already exists 
      uses: mukunku/tag-exists-action@v1.0.0
      id: checkTag
      with: 
        tag: ${{ env.VERSIONNAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create tag
      if: steps.checkTag.outputs.exists == false
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ env.VERSIONNAME }}',
            sha: context.sha
          })
      
    - name: Get Changelog
      uses: mikepenz/release-changelog-builder-action@v2
      id: Changelog
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          toTag: ${{ env.VERSIONNAME }}
      
    - name: Output Changelog
      run : |
        echo "Output Changelog"
        echo "${{ steps.Changelog.outputs.changelog }}"
      
    - name: Create Changelog TXT File
      working-directory : ${{ github.workspace }}/app
      run : |
        echo "Create Changelog TXT File"
        echo "${{ steps.Changelog.outputs.changelog }}" > Changelog.txt
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle build
      run: ./gradlew build

#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
#      with:
#        arguments: build
#        cache-disabled: true

    - name : View Build Directory
      working-directory : ${{ github.workspace }}/app/build/outputs/apk/release
      run : |
        echo "${{ github.workspace }}/app/build/outputs/apk/release"
        ls -la

    - name: Rename APK
      working-directory : ${{ github.workspace }}/app/build/outputs/apk/release
      run: mv app-release-unsigned.apk ${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk

    - name: Upload Artifact APK
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk
        path: ${{ github.workspace }}/app/build/outputs/apk/release/${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk

    - name: Upload Artifact VersionName
      uses: actions/upload-artifact@v2
      with:
        name: VersionName.txt
        path: ${{ github.workspace }}/app/VersionName.txt

    - name: Upload Artifact Changelog
      uses: actions/upload-artifact@v2
      with:
        name: Changelog.txt
        path: ${{ github.workspace }}/app/Changelog.txt

  merge_completed:
    needs: build
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Display PR Number
      run: |
        echo "PR #${{ github.event.number }} has been merged"

    - name: Download Artifact VersionName
      uses: actions/download-artifact@v3.0.0
      with:
        name: VersionName.txt
        path: ${{ github.workspace }}/artifact

    - name: Read Gradle VersionName
      working-directory : ${{ github.workspace }}/artifact
      run : |
        echo "Read Gradle VersionName"
        echo "VERSIONNAME=$(cat VersionName.txt)" >> $GITHUB_ENV

    - name: Output Gradle VersionName
      run : |
        echo "Output Gradle VersionName"
        echo "${{ env.VERSIONNAME }}"

    - name: Download Artifact Changelog
      uses: actions/download-artifact@v3.0.0
      with:
        name: Changelog.txt
        path: ${{ github.workspace }}/artifact

    - name: Read Changelog
      working-directory : ${{ github.workspace }}/artifact
      run : |
        echo "Read Changelog"
        echo "CHANGELOG=$(cat Changelog.txt)" >> $GITHUB_ENV

    - name: Output Changelog
      run : |
        echo "Output Changelog"
        echo "${{ env.CHANGELOG }}"

    - name: Download Artifact APK
      uses: actions/download-artifact@v3.0.0
      with:
        name: ${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk
        path: ${{ github.workspace }}/artifact
      
    - name : View Artifact Directory
      working-directory : ${{ github.workspace }}/artifact
      run : | 
        echo "${{ github.workspace }}/artifact"
        ls -la
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSIONNAME }}
        release_name: ${{ env.VERSIONNAME }}
        body: |
          ${{ env.CHANGELOG }}
        draft: false
        prerelease: false
 
    - name: Upload Release Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/artifact/${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk
        asset_name: ${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk
        asset_content_type: application/gzip

    - name: Create Release - Xposed Repo
      id: create_release_xposed
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.VERSIONNAME }}
        tag: ${{ env.VERSIONNAME }}
        body: ${{ env.CHANGELOG }}
        artifacts: ${{ github.workspace }}/artifact/${{ env.APP_NAME }}-${{ env.VERSIONNAME }}.apk
        token: ${{ secrets.REPO_TOKEN }}
        owner: Xposed-Modules-Repo
        repo: com.github.thepiemonster.hidemocklocation

  merge_closed:
    needs: build
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    
    steps:
    - name: PR Closed Without Merge
      run: |
        echo "PR #${{ github.event.number }} has been closed without being merged"
